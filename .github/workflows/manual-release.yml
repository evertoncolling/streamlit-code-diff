name: Manual GitHub Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name (e.g., v1.0.0)'
        required: true
        type: string
      release_name:
        description: 'Release name (e.g., Release v1.0.0)'
        required: true  
        type: string
      release_body:
        description: 'Release notes (supports markdown)'
        required: false
        type: string
        default: |
          ## Changes
          
          - Add your release notes here
          
          ## Installation
          
          ```bash
          pip install streamlit-code-diff
          ```
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      draft:
        description: 'Create as draft'
        required: false
        type: boolean
        default: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate tag format
        run: |
          if [[ ! "${{ github.event.inputs.tag_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            echo "❌ Invalid tag format. Use semantic versioning (e.g., v1.0.0, v1.0.0-beta.1)"
            exit 1
          fi
          echo "✅ Tag format is valid"
      
      - name: Check if tag exists
        run: |
          if git tag -l | grep -q "^${{ github.event.inputs.tag_name }}$"; then
            echo "❌ Tag ${{ github.event.inputs.tag_name }} already exists"
            exit 1
          fi
          echo "✅ Tag is available"
      
      - name: Create and push tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "${{ github.event.inputs.tag_name }}"
          git push origin "${{ github.event.inputs.tag_name }}"
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: src/streamlit_code_diff/frontend/package-lock.json
      
      - name: Set up Python and uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true
      
      - name: Build frontend
        run: |
          cd src/streamlit_code_diff/frontend
          npm ci
          npm run build
      
      - name: Build Python package
        run: uv build --wheel
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.release_body }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            dist/*.whl
            dist/*.tar.gz 